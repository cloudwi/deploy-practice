name: Java CI with Gradle

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # main 설정 파일 생성 및 write
      - name: make application.yaml
        run: |
          cd ./src/main/resources
          touch ./application-database.yaml
          echo "${{ secrets.APPLICATION_YML }}" >> ./application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Gradle build
      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: web docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -f dockerfile -t ${{ secrets.DOCKER_HUB_REP }}/deploy-practice-backend .
          docker push ${{ secrets.DOCKER_HUB_REP }}/deploy-practice-backend

      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_KEY }}
          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REP }}/second-eyes-web
            sudo docker pull ${{ secrets.DOCKER_REP }}/second-eyes-nginx
            docker-compose up -d
            docker image prune -f